"passets/images/2018VS2024.pngassetassets/images/2018VS2024.png'assets/images/Acidification_process.pngasset'assets/images/Acidification_process.png'assets/images/Acidification_process.svgasset'assets/images/Acidification_process.svg"assets/images/Air_Quality_Icon.pngasset"assets/images/Air_Quality_Icon.png!assets/images/ArrowLeft&Right.svgasset!assets/images/ArrowLeft&Right.svgassets/images/CO2_graph.pngassetassets/images/CO2_graph.pngassets/images/Carbon_2018.pngassetassets/images/Carbon_2018.pngassets/images/Carbon_2024.pngassetassets/images/Carbon_2024.pngassets/images/Data.jsonassetassets/images/Data.json!assets/images/Explore-Ai-chat.pngasset!assets/images/Explore-Ai-chat.pngassets/images/Group 25.svgassetassets/images/Group 25.svgassets/images/HexTech_Blue.svgassetassets/images/HexTech_Blue.svgassets/images/HexTech_Blue2.svgassetassets/images/HexTech_Blue2.svgassets/images/HexTech_Glod.svgassetassets/images/HexTech_Glod.svgassets/images/HexTech_Glod2.svgassetassets/images/HexTech_Glod2.svgassets/images/Ice_Sheets.mp4assetassets/images/Ice_Sheets.mp4assets/images/Marine.pngassetassets/images/Marine.png"assets/images/Marine_life_icon.pngasset"assets/images/Marine_life_icon.pngassets/images/Methane_2016.pngassetassets/images/Methane_2016.png!assets/images/Methane_Collage.pngasset!assets/images/Methane_Collage.png!assets/images/Methane_sources.pngasset!assets/images/Methane_sources.pngassets/images/N2O_graph.pngassetassets/images/N2O_graph.pngassets/images/NO2_map.pngassetassets/images/NO2_map.png*assets/images/Ocean_Acidification_Icon.pngasset*assets/images/Ocean_Acidification_Icon.png,assets/images/Ocean_Carbon_concentration.pngasset,assets/images/Ocean_Carbon_concentration.png!assets/images/Orbiting_Carbon.pngasset!assets/images/Orbiting_Carbon.pngassets/images/PM2.5.pngassetassets/images/PM2.5.png@assets/images/Press on any image to Start Your Investigation.svgasset@assets/images/Press on any image to Start Your Investigation.svg-assets/images/Press on any image to Start.svgasset-assets/images/Press on any image to Start.svgassets/images/Sakta.mp3assetassets/images/Sakta.mp3:assets/images/Screenshot 2024-09-20 at 10.17.01 PM 1.pngasset:assets/images/Screenshot 2024-09-20 at 10.17.01 PM 1.pngassets/images/Sea_Star.pngassetassets/images/Sea_Star.pngassets/images/ai_avatar.svgassetassets/images/ai_avatar.svgassets/images/ant_graph.pngassetassets/images/ant_graph.png"assets/images/antartica_change.mp4asset"assets/images/antartica_change.mp4assets/images/app_bar.svgassetassets/images/app_bar.svg#assets/images/app_bar_with_text.svgasset#assets/images/app_bar_with_text.svgassets/images/atmosphere.jpgassetassets/images/atmosphere.jpgassets/images/bg.pngassetassets/images/bg.pngassets/images/bg.svgassetassets/images/bg.svgassets/images/biosphere (2).pngassetassets/images/biosphere (2).png'assets/images/bleached&not_bleached.pngasset'assets/images/bleached&not_bleached.png assets/images/bleached_coral.pngasset assets/images/bleached_coral.png"assets/images/blue_arrowed_btn.svgasset"assets/images/blue_arrowed_btn.svgassets/images/board_frame.svgassetassets/images/board_frame.svgassets/images/btn.svgassetassets/images/btn.svg assets/images/carbon_collage.jpgasset assets/images/carbon_collage.jpg assets/images/carbon_collage.pngasset assets/images/carbon_collage.pngassets/images/carbon_graph.pngassetassets/images/carbon_graph.pngassets/images/choose_frame.svgassetassets/images/choose_frame.svgassets/images/close_icon.svgassetassets/images/close_icon.svgassets/images/clownfish.pngassetassets/images/clownfish.png!assets/images/connecting_line.svgasset!assets/images/connecting_line.svgassets/images/cryosphere.jpgassetassets/images/cryosphere.jpgassets/images/fire_graph_1.avifassetassets/images/fire_graph_1.avifassets/images/fire_graph_2.avifassetassets/images/fire_graph_2.avifassets/images/fullbg.pngassetassets/images/fullbg.pngassets/images/fullbg.svgassetassets/images/fullbg.svgassets/images/global_icon.jpgassetassets/images/global_icon.jpgassets/images/global_icon2.pngassetassets/images/global_icon2.png"assets/images/global_sea_level.mp4asset"assets/images/global_sea_level.mp4assets/images/green_affect.pngassetassets/images/green_affect.pngassets/images/green_icon.pngassetassets/images/green_icon.pngassets/images/greenhouse.pngassetassets/images/greenhouse.pngassets/images/greenhouse_1.pngassetassets/images/greenhouse_1.pngassets/images/greenhouse_1.svgassetassets/images/greenhouse_1.svgassets/images/greenhouse_2.pngassetassets/images/greenhouse_2.pngassets/images/greenhouse_2.svgassetassets/images/greenhouse_2.svgassets/images/greenhouse_3.pngassetassets/images/greenhouse_3.pngassets/images/greenhouse_3.svgassetassets/images/greenhouse_3.svgassets/images/greenhouse_4.pngassetassets/images/greenhouse_4.pngassets/images/greenhouse_4.svgassetassets/images/greenhouse_4.svgassets/images/greenland.mp4assetassets/images/greenland.mp47assets/images/gris_with_vel_i_200204-202311_1080p25.mp4asset7assets/images/gris_with_vel_i_200204-202311_1080p25.mp4assets/images/hint.svgassetassets/images/hint.svgassets/images/hint_icon.pngassetassets/images/hint_icon.pngassets/images/human.svgassetassets/images/human.svgassets/images/hydrosphere.jpegassetassets/images/hydrosphere.jpegassets/images/ice_icon.jpg.webpassetassets/images/ice_icon.jpg.webpassets/images/image-frame.svgassetassets/images/image-frame.svgassets/images/image-frame1.svgassetassets/images/image-frame1.svg)assets/images/image_frame/Air Quality.svgasset)assets/images/image_frame/Air Quality.svg,assets/images/image_frame/Global Warming.svgasset,assets/images/image_frame/Global Warming.svg.assets/images/image_frame/Greenhouse Gases.svgasset.assets/images/image_frame/Greenhouse Gases.svg)assets/images/image_frame/Ice Melting.svgasset)assets/images/image_frame/Ice Melting.svg)assets/images/image_frame/Marine Life.svgasset)assets/images/image_frame/Marine Life.svg1assets/images/image_frame/Ocean Acidification.svgasset1assets/images/image_frame/Ocean Acidification.svg.assets/images/image_frame/Sea Level Rising.svgasset.assets/images/image_frame/Sea Level Rising.svg(assets/images/image_frame/Wild Fires.svgasset(assets/images/image_frame/Wild Fires.svgassets/images/info_board.svgassetassets/images/info_board.svg,assets/images/interaction_ice_sheet.jpg.webpasset,assets/images/interaction_ice_sheet.jpg.webpassets/images/intro.mp4assetassets/images/intro.mp4assets/images/last.pngassetassets/images/last.pngassets/images/main_title.svgassetassets/images/main_title.svg assets/images/mean_sea_level.pngasset assets/images/mean_sea_level.pngassets/images/outro.mp4assetassets/images/outro.mp4*assets/images/pressed_blue_arrowed_btn.svgasset*assets/images/pressed_blue_arrowed_btn.svgassets/images/pressed_btn.svgassetassets/images/pressed_btn.svg%assets/images/questions_extended.jsonasset%assets/images/questions_extended.jsonassets/images/rising_level.mp4assetassets/images/rising_level.mp4*assets/images/sea_ice_2024_min_1080p60.mp4asset*assets/images/sea_ice_2024_min_1080p60.mp4assets/images/sea_icon.pngassetassets/images/sea_icon.pngassets/images/sea_icon.webpassetassets/images/sea_icon.webpassets/images/seaice.pngassetassets/images/seaice.pngassets/images/send_icon.svgassetassets/images/send_icon.svgassets/images/star_pin.svgassetassets/images/star_pin.svgassets/images/wildfires.pngassetassets/images/wildfires.pngassets/images/wildfires_1.jpgassetassets/images/wildfires_1.jpgassets/images/wildfires_3.pngassetassets/images/wildfires_3.png assets/images/wildfires_icon.jpgasset assets/images/wildfires_icon.jpg2packages/cupertino_icons/assets/CupertinoIcons.ttfasset2packages/cupertino_icons/assets/CupertinoIcons.ttf)packages/wakelock_plus/assets/no_sleep.jsasset)packages/wakelock_plus/assets/no_sleep.js"